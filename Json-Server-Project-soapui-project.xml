<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="ad0b48a8-ca77-4b85-a79e-2c55ebd1b5bb" activeEnvironment="Default" name="Json Server Project" resourceRoot="" soapui-version="5.6.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="d50fc761-ef6a-432b-a7b3-3a782c466a13" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:3000" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:3000</con:endpoint></con:endpoints><con:resource name="Employees" path="/employees" id="f88b5c2f-6a30-4d58-8fbe-6a76540544f3"><con:settings/><con:parameters/><con:method name="getEmployees" id="d8cf0003-1acc-48e9-8700-ec3986e99170" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="786c9c71-d837-41a9-bfe5-b6eb7155cde5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/employees</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="df54eb87-74d3-40a9-bc16-c1954251c831" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:3000" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:3000</con:endpoint></con:endpoints><con:resource name="Id" path="/employees/{id}" id="96585503-763e-4ebf-bccb-d03e1517861e"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="getEmployee" id="c6e378fc-eb26-4ea0-b562-64de031983f7" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://localhost/employees/2">ns:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>Fault</con:element></con:representation><con:request name="Request 1" id="e541036a-a354-4425-b165-34eb6a108050" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/employees/2</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="2" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="72556132-222d-4d6a-b605-55edea9090ef" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:3000" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:3000</con:endpoint></con:endpoints><con:resource name="Employees" path="/employees" id="6925742b-9f6e-4ae0-bfa8-e32db674db1f"><con:settings/><con:parameters/><con:method name="createEmployee" id="a9607fe5-8cc4-4a43-9b11-ee64c0263029" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:emp="http://localhost/employees">emp:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>500 400</con:status><con:params/><con:element>html</con:element></con:representation><con:request name="Request 1" id="81aac6c7-841b-4f95-8d53-36a416ae8a89" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request>{
  "id": 115,
  "first_name": "Sebastian123",
  "last_name": "Eschweiler123",
  "email": "sebastian@codingthesmartway.com"
}</con:request><con:originalUri>http://localhost/employees</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="42da0c24-fa8c-4bf2-92dc-6f30d9c1c380" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:3000" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:3000</con:endpoint></con:endpoints><con:resource name="1" path="/employees/{id}" id="26818324-1bf4-4cc5-a048-5f37c414dc20"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="updateEmployee" id="aa1c0396-2f35-4e42-8ce5-43db4ca8c487" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://localhost/employees/2">ns:Response</con:element></con:representation><con:request name="Request 1" id="ced0e8d8-5467-482b-aae8-dcd1a4d50f62" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request>{
  "first_name": "Sebastian",
  "last_name": "Eschweiler",
  "email": "sebastian@codingthesmartway.com"
}</con:request><con:originalUri>http://localhost/employees/2</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="2" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="35829067-7a41-4161-b40d-c34881df3a5e" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:3000" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:3000</con:endpoint></con:endpoints><con:resource name="1" path="/employees/{id}" id="86393360-4808-4040-a01b-23b281734d5c"><con:settings/><con:parameters><con:parameter><con:name>id</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="1 1" id="7822ca8d-c1c5-46e4-93bd-3d24c977d534" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="deleteEmployee" id="24049f08-79a1-42db-bae5-5b56c36553fd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/employees/3</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="2" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="ea5d1b21-16e7-469b-9e54-4f28428c560d" name="SanitySuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="7f9230bc-5669-4493-9a3a-92c3b7555ad0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="requestResponseChaining" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="getEmployees" id="5fa99c32-aca1-4eab-ba69-139856a8c7b1"><con:settings/><con:config service="http://localhost:3000" resourcePath="/employees" methodName="getEmployees" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getEmployees" id="786c9c71-d837-41a9-bfe5-b6eb7155cde5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/employees</con:originalUri><con:assertion type="Response SLA Assertion" id="41c7f485-ad5b-4497-a291-0ce211414917" name="Response SLA"><con:configuration><SLA>500</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d9ff0ea9-1c8e-4d91-964c-21456c9bb4bf" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="246eaddf-e966-4502-8ee8-041852b6b984" name="Contains"><con:configuration><token>jackie_Fadel48@yahoo.com</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4efa0fc6-18d7-4c8d-ba4c-a7c8e707c023" name="JsonPath Match"><con:configuration><path>[0].first_name</path><content>Sebastian</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="e1fc04f3-87e8-4300-8655-8424aa827a48" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper
def response = messageExchange.response.responseContent
def json = new JsonSlurper().parseText(response)

def list = json;
log.info list.getClass();
assert list.size()>35</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="fakerscript" id="ab4967d1-b69a-40a5-8bc6-844a9c430685"><con:settings/><con:config><script>import com.github.javafaker.Faker;

def faker = new Faker();
def randomId = faker.number().numberBetween(100, 1000);
def randomFirstName = faker.name().firstName();
def randomLastName = faker.name().lastName();
def randomEmail = faker.name().firstName() + "@gmail.com";

testRunner.testCase.setPropertyValue( "id", randomId.toString())
testRunner.testCase.setPropertyValue( "firstName",randomFirstName)
testRunner.testCase.setPropertyValue( "lastName",randomLastName)
testRunner.testCase.setPropertyValue( "email",randomEmail)
</script></con:config></con:testStep><con:testStep type="restrequest" name="getEmployee" id="78368c71-f236-4540-a613-a9d05167f7e9"><con:settings/><con:config service="http://localhost:3000" resourcePath="/employees/{id}" methodName="getEmployee" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getEmployee" id="e541036a-a354-4425-b165-34eb6a108050" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/employees/2</con:originalUri><con:assertion type="JsonPath Existence Match" id="79e08229-8050-4bc5-990d-f8c0146a4618" name="JsonPath Existence Match"><con:configuration><path>$.email</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="52a1e2d0-1f2e-4ad9-be7a-61bbb9c54ee2" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper

assert messageExchange.hasResponse()==true
assert messageExchange.getTimeTaken() &lt; 500
def response = messageExchange.response.responseContent;
def json = new JsonSlurper().parseText(response);

def actual = json.first_name   //json path
def expectedFirstName = context.expand('${#TestCase#firstName}')
assert actual == "Sebastian"

def actualId= json.id;
def expectedId = context.expand('${#TestCase#id}')

log.info messageExchange.responseHeaders["Connection"];
assert messageExchange.responseHeaders["Connection"][0] == "keep-alive"</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#TestSuite#id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="script" id="60edadfd-9623-4f26-b27b-7e41450f3944" disabled="true"><con:settings/><con:config><script>//1-1000
//decimal to integer value
//def randomId = ((int)(Math.random()*1000))

//store this random value to a test suite/test case level property and use it in the createEmployee request body

// Get a test case property
def testCaseProperty = testRunner.testCase.getPropertyValue("name")

//log.info(testCaseProperty);


// Set a test case property
//testRunner.testCase.setPropertyValue( "id", randomId.toString() )


// Set a test suite property
//testRunner.testCase.testSuite.setPropertyValue( "MyProp", someValue )
// Set a project property
//testRunner.testCase.testSuite.project.setPropertyValue( "MyProp", someValue ) 
// Set a global property
//com.eviware.soapui.SoapUI.globalProperties.setPropertyValue( "MyProp", someValue )

// Get a test suite property
//def testSuiteProperty = testRunner.testCase.testSuite.getPropertyValue( "MyProp" )
// Get a project property
//def projectProperty = testRunner.testCase.testSuite.project.getPropertyValue( "MyProp" )
// Get a global property
//def globalProperty = com.eviware.soapui.SoapUI.globalProperties.getPropertyValue( "MyProp" )</script></con:config></con:testStep><con:testStep type="restrequest" name="createEmployee" id="27fc3847-6d41-4428-a012-de3a1c67981f"><con:settings/><con:config service="http://localhost:3000" resourcePath="/employees" methodName="createEmployee" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createEmployee" id="81aac6c7-841b-4f95-8d53-36a416ae8a89" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request>{
  "id": ${#TestCase#id},
  "first_name": "${#TestCase#firstName}",
  "last_name": "${#TestCase#lastName}",
  "email": "${#TestCase#email}"
}</con:request><con:originalUri>http://localhost/employees</con:originalUri><con:assertion type="Response SLA Assertion" id="dbf8c707-d5a3-4ee3-820e-13e3e06b9777" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="idTransfer2" id="2a3becb6-be80-4882-b86b-bd04a38978ae"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createEmployee</con:sourceStep><con:sourcePath>$.id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>deleteEmployee</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="idTransfer" id="d00fdada-b8a7-41e0-9464-0397b6ce877e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>createEmployee</con:sourceStep><con:sourcePath>$.id</con:sourcePath><con:targetType>id</con:targetType><con:targetStep>updateEmployee</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="jdbc" name="JDBC Request" id="fc4dd26f-756c-47c0-ae9c-954917903c2d" disabled="true"><con:settings/><con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties/></con:config></con:testStep><con:testStep type="restrequest" name="updateEmployee" id="f2504422-51ad-4794-a196-b8c5252e2d12"><con:settings/><con:config service="http://localhost:3000" resourcePath="/employees/{id}" methodName="updateEmployee" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="updateEmployee" id="ced0e8d8-5467-482b-aae8-dcd1a4d50f62" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request>{
  "first_name": "Sebastian",
  "last_name": "Eschweiler",
  "email": "sebastian@codingthesmartway.com"
}</con:request><con:originalUri>http://localhost/employees/2</con:originalUri><con:assertion type="Response SLA Assertion" id="688df9aa-c6cc-4993-bae5-af9e66f4c90b" name="Response SLA"><con:configuration><SLA>1000</SLA></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="929" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="deleteEmployee" id="eb719fb7-a36b-4a6b-90ba-f5e97af4392a"><con:settings/><con:config service="http://localhost:3000" resourcePath="/employees/{id}" methodName="1 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="deleteEmployee" id="24049f08-79a1-42db-bae5-5b56c36553fd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:3000</con:endpoint><con:request/><con:originalUri>http://localhost/employees/3</con:originalUri><con:assertion type="Response SLA Assertion" id="e50792f5-906e-4d03-a94f-177c99be0318" name="Response SLA"><con:configuration><SLA>300</SLA></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="ab1a5de6-0d02-45de-8d27-fc9c1edda799" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="929" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:loadTest id="9162faf7-eb3e-4e3d-9ee0-ae0297a70352" name="LoadTest 1"><con:settings/><con:threadCount>5</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>10</con:testLimit><con:limitType>TIME</con:limitType><con:loadStrategy><con:type>Simple</con:type></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval></con:loadTest><con:setupScript/><con:tearDownScript>//for every test case

testRunner.testCase.testSuite.project.testSuites["Library"].testCases["Reporting_Utility"].
testSteps["GenerateHTMLReport"].run(testRunner, context);</con:tearDownScript><con:properties><con:property><con:name>id</con:name><con:value>929</con:value></con:property><con:property><con:name>firstName</con:name><con:value>Mitch</con:value></con:property><con:property><con:name>lastName</con:name><con:value>Hettinger</con:value></con:property><con:property><con:name>email</con:name><con:value>Sheron@gmail.com</con:value></con:property><con:property><con:name>author</con:name><con:value>Amuthan</con:value></con:property><con:property><con:name>category</con:name><con:value>loginModule</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>id</con:name><con:value>2</con:value></con:property><con:property><con:name>fname</con:name><con:value>virendar</con:value></con:property><con:property><con:name>lname</con:name><con:value>sehwag</con:value></con:property><con:property><con:name>testName</con:name><con:value>requestResponseChaining</con:value></con:property><con:property><con:name>execute</con:name><con:value>Yes</con:value></con:property></con:properties><con:setupScript>import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;

def projectPath = new com.eviware.soapui.support.GroovyUtils(context).projectPath //get the project location directory dynamically
log.info(projectPath)

ExtentReports reports= new ExtentReports();
ExtentSparkReporter spark = new ExtentSparkReporter(projectPath+"\\index.html");
spark.config().setTheme(Theme.DARK);
spark.config().setDocumentTitle("Automation Report");
spark.config().setReportName("SOAP UI html");
reports.attachReporter(spark);

context.report = reports;
</con:setupScript><con:tearDownScript>context.report.flush();
def projectPath = new com.eviware.soapui.support.GroovyUtils(context).projectPath //get the project location directory dynamically
log.info("Reports are published at "+projectPath);</con:tearDownScript></con:testSuite><con:testSuite id="3a13b196-9ed7-4a21-b6ca-d20ac2aa777b" name="Library" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="30eba29f-8bde-4f4a-8e2d-01fbf7737474" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Reporting_Utility" searchProperties="true"><con:settings/><con:testStep type="groovy" name="GenerateHTMLReport" id="1531c4d8-1808-4492-b29d-3ab89b940c38"><con:settings/><con:config><script>import com.aventstack.extentreports.markuputils.CodeLanguage;
import com.aventstack.extentreports.markuputils.MarkupHelper;
import com.aventstack.extentreports.markuputils.ExtentColor;

try {
def testCase = testRunner.testCase.name;
def testnode = context.report.createTest(testCase);
def testAuthor = testRunner.testCase.getPropertyValue("author");
def testCategory = testRunner.testCase.getPropertyValue("category");


testnode.assignAuthor(testAuthor);
testnode.assignCategory(testCategory);
  for(stepResult in testRunner.getResults())
  {
   def testSuite = testRunner.testCase.testSuite.name;
   def testStep = stepResult.getTestStep();
   def testStepName = testStep.name
   def type = testStep.config.type
   def status = stepResult.getStatus()
  
   if(status.toString().equalsIgnoreCase("OK")){
   	testnode.pass(testStepName+" is passed");
   }
   if(status.toString().equalsIgnoreCase("Failed")){
   	testnode.fail(MarkupHelper.createLabel(testStepName+" is failed", ExtentColor.RED));
   	for(resMessage in stepResult.getMessages())
   {
     testnode.fail(MarkupHelper.createLabel(resMessage, ExtentColor.RED));
   }
   }
  
    if(type=="request")//XML request
        {
       def extRequest = testStep.getProperty("RawRequest").getValue();  
       def extResponse = stepResult.getResponseContent(); 
       testnode.info("---------Request-------------");   
	  testnode.info(MarkupHelper.createCodeBlock(extRequest, CodeLanguage.XML));
	  testnode.info("---------Response-------------");   
	  testnode.info(MarkupHelper.createCodeBlock(extResponse, CodeLanguage.XML));
        }
    if(type=="restrequest"){ //rest request
    	  def extRequest = testStep.getProperty("RawRequest").getValue();  
       def extResponse = stepResult.getResponseContent(); 
    
       String therequestUri = new String(context.getProperty("requestUri").toString());
       testnode.info therequestUri;
       if(extRequest.length()> 0){
        testnode.info("---------Request-------------");    
	  testnode.info(MarkupHelper.createCodeBlock(extRequest, CodeLanguage.JSON));
       }
	  testnode.info("---------Response-------------");  
	  testnode.info(MarkupHelper.createCodeBlock(extResponse, CodeLanguage.JSON));
    }

     
   }
 }
catch(exc)
{
   log.error("Exception happened: " + exc.toString());
}</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>